<!DOCTYPE html>
<!-- saved from url=(0040)https://eloquentjavascript.net/code/#6.3 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta name="viewport" content="width=device-width">
  <!--<base href="..">--><base href=".">
  <title>Eloquent JavaScript :: Code Sandbox</title>

  <script src="./Eloquent JavaScript __ Code Sandbox_files/acorn_codemirror.js"></script>
  <link rel="stylesheet" href="./Eloquent JavaScript __ Code Sandbox_files/codemirror.css">
  <link rel="stylesheet" href="./Eloquent JavaScript __ Code Sandbox_files/ejs.css">
  <script src="./Eloquent JavaScript __ Code Sandbox_files/sandbox.js"></script>
  <script src="./Eloquent JavaScript __ Code Sandbox_files/chapter_info.js"></script>
  <script src="./Eloquent JavaScript __ Code Sandbox_files/code.js"></script>

  <style>
    .control { font-size: 15px }
  </style>
</head>

<body><div style="background: #ffb; border-bottom: 1px solid silver; padding: 6px 4em; text-align: center">
  <strong>Note:</strong> If you are reading the <strong>second edition</strong> of the book,
  you'll want to go
  to <a href="https://eloquentjavascript.net/2nd_edition/code/">that
  edition's sandbox</a> instead!
</div>

<article style="max-width: 50em;">
  <h1>Code Sandbox<div style="font-size: 70%"><a class="subtlelink" href="https://eloquentjavascript.net/index.html">Eloquent JavaScript</a></div></h1>

  <p>You can use this page to download source code and solutions to
  exercises for the book Eloquent JavaScript, and to directly run code
  in the context of chapters from that book, either to solve exercises
  to simply play around.</p>

  <p>
    Chapter: <select id="chapters" class="control"><option value="0">0. Introduction</option><option value="1">1. Values, Types, and Operators</option><option value="2">2. Program Structure</option><option value="3">3. Functions</option><option value="4">4. Data Structures: Objects and Arrays</option><option value="5">5. Higher-Order Functions</option><option value="6">6. The Secret Life of Objects</option><option value="7">7. Project: A Robot</option><option value="8">8. Bugs and Errors</option><option value="9">9. Regular Expressions</option><option value="10">10. Modules</option><option value="11">11. Asynchronous Programming</option><option value="12">12. Project: A Programming Language</option><option value="13">13. JavaScript and the Browser</option><option value="14">14. The Document Object Model</option><option value="15">15. Handling Events</option><option value="16">16. Project: A Platform Game</option><option value="17">17. Drawing on Canvas</option><option value="18">18. HTTP and Forms</option><option value="19">19. Project: A Pixel Art Editor</option><option value="20">20. Node.js</option><option value="21">21. Project: Skill-Sharing Website</option><option value="22">22. JavaScript and Performance</option></select>
    <select id="per_chapter" class="control"><option value="box">Select an exercise</option><option value="6.1">6.1 A vector type</option><option value="6.2">6.2 Groups</option><option value="6.3">6.3 Iterable groups</option><option value="6.4">6.4 Borrowing a method</option></select>
    <button id="run" class="control">run code</button>
  </p>

  <div class="editor-wrap">
    <textarea id="editor" style="display: none;"></textarea><div class="CodeMirror cm-s-default"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 27px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; display: block; bottom: 0px;"><div style="min-width: 1px; height: 1352px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 17px; margin-bottom: 0px; border-right-width: 30px; min-height: 1352px; min-width: 671.672px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>10</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>8</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>56</div></div></div><div class="CodeMirror-measure"><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">let</span> <span class="cm-def">result</span> <span class="cm-operator">=</span> {<span class="cm-property">value</span>: <span class="cm-keyword">this</span>.<span class="cm-property">group</span>.<span class="cm-property">members</span>[<span class="cm-keyword">this</span>.<span class="cm-property">position</span>],</span></pre></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 10px; top: 0px; height: 24px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Group</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">constructor</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">this</span>.<span class="cm-property">members</span> <span class="cm-operator">=</span> [];</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">add</span>(<span class="cm-def">value</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">if</span> (<span class="cm-operator">!</span><span class="cm-keyword">this</span>.<span class="cm-property">has</span>(<span class="cm-variable-2">value</span>)) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">this</span>.<span class="cm-property">members</span>.<span class="cm-property">push</span>(<span class="cm-variable-2">value</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">12</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">delete</span>(<span class="cm-def">value</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">13</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">this</span>.<span class="cm-property">members</span> <span class="cm-operator">=</span> <span class="cm-keyword">this</span>.<span class="cm-property">members</span>.<span class="cm-property">filter</span>(<span class="cm-def">v</span> <span class="cm-operator">=&gt;</span> <span class="cm-variable-2">v</span> <span class="cm-operator">!==</span> <span class="cm-variable-2">value</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">14</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">15</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">16</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">has</span>(<span class="cm-def">value</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">17</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>.<span class="cm-property">members</span>.<span class="cm-property">includes</span>(<span class="cm-variable-2">value</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">18</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">19</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">20</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-keyword">static</span> <span class="cm-property">from</span>(<span class="cm-def">collection</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">21</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">let</span> <span class="cm-def">group</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Group</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">22</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">for</span> (<span class="cm-keyword">let</span> <span class="cm-def">value</span> <span class="cm-keyword">of</span> <span class="cm-variable-2">collection</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">23</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-variable-2">group</span>.<span class="cm-property">add</span>(<span class="cm-variable-2">value</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">24</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">25</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable-2">group</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">26</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">27</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">28</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  [<span class="cm-variable">Symbol</span>.<span class="cm-property">iterator</span>]() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">29</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-keyword">new</span> <span class="cm-variable">GroupIterator</span>(<span class="cm-keyword">this</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">30</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">31</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">32</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">33</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">GroupIterator</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">34</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">constructor</span>(<span class="cm-def">group</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">35</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">this</span>.<span class="cm-property">group</span> <span class="cm-operator">=</span> <span class="cm-variable-2">group</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">36</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">this</span>.<span class="cm-property">position</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">37</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">38</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">39</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-property">next</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">40</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    <span class="cm-keyword">if</span> (<span class="cm-keyword">this</span>.<span class="cm-property">position</span> <span class="cm-operator">&gt;=</span> <span class="cm-keyword">this</span>.<span class="cm-property">group</span>.<span class="cm-property">members</span>.<span class="cm-property">length</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">41</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">return</span> {<span class="cm-property">done</span>: <span class="cm-atom">true</span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">42</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    } <span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">43</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">let</span> <span class="cm-def">result</span> <span class="cm-operator">=</span> {<span class="cm-property">value</span>: <span class="cm-keyword">this</span>.<span class="cm-property">group</span>.<span class="cm-property">members</span>[<span class="cm-keyword">this</span>.<span class="cm-property">position</span>],</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">44</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">                    <span class="cm-property">done</span>: <span class="cm-atom">false</span>};</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">45</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">this</span>.<span class="cm-property">position</span><span class="cm-operator">++</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">46</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">      <span class="cm-keyword">return</span> <span class="cm-variable-2">result</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">47</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">48</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">49</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">50</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">51</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">for</span> (<span class="cm-keyword">let</span> <span class="cm-def">value</span> <span class="cm-keyword">of</span> <span class="cm-variable">Group</span>.<span class="cm-property">from</span>([<span class="cm-string">"a"</span>, <span class="cm-string">"b"</span>, <span class="cm-string">"c"</span>])) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">52</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">value</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">53</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">54</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// → a</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">55</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// → b</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -17px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 14px;">56</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// → c</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 1352px;"></div><div class="CodeMirror-gutters" style="height: 1382px; left: 0px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 17px;"></div></div></div></div>
    <div class="sandbox-output" id="output"><pre class="sandbox-output-log">a</pre><pre class="sandbox-output-log">b</pre><pre class="sandbox-output-log">c</pre></div>
  </div>

  <div id="runLocally" style="display: none;">
    To run this chapter's code locally, use these files:
    <ul id="local-files" style="font-family: &#39;PT Mono&#39;, monospace; margin-top: 0"></ul>
  </div>

  <div id="fileInfo" style="">
    These files contain this chapter’s project code:
    <ul id="files" style="font-family: &#39;PT Mono&#39;, monospace; margin-top: 0"><li><a href="https://eloquentjavascript.net/code/chapter/06_object.js">chapter/06_object.js</a></li></ul>
  </div>

  <p id="exercise_info" style="">If you've solved the exercise and want to compare your code with
  mine, or you <em>really</em> tried, but can't get your code to work,
  you can <button id="solution" style="color: #c22;" class="control">look at the
  solution</button> (or <a id="download" href="data:text/plain;charset=UTF-8,class Group {%0A  constructor() {%0A    this.members = [];%0A  }%0A%0A  add(value) {%0A    if (!this.has(value)) {%0A      this.members.push(value);%0A    }%0A  }%0A%0A  delete(value) {%0A    this.members = this.members.filter(v =&gt; v !== value);%0A  }%0A%0A  has(value) {%0A    return this.members.includes(value);%0A  }%0A%0A  static from(collection) {%0A    let group = new Group;%0A    for (let value of collection) {%0A      group.add(value);%0A    }%0A    return group;%0A  }%0A%0A  [Symbol.iterator]() {%0A    return new GroupIterator(this);%0A  }%0A}%0A%0Aclass GroupIterator {%0A  constructor(group) {%0A    this.group = group;%0A    this.position = 0;%0A  }%0A%0A  next() {%0A    if (this.position &gt;= this.group.members.length) {%0A      return {done: true};%0A    } else {%0A      let result = {value: this.group.members[this.position],%0A                    done: false};%0A      this.position++;%0A      return result;%0A    }%0A  }%0A}%0A%0Afor (let value of Group.from([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])) {%0A  console.log(value);%0A}%0A// %E2%86%92 a%0A// %E2%86%92 b%0A// %E2%86%92 c">download it</a>).</p>

  <p id="box_info" style="display: none;">
    The base environment for this chapter (if any) is available in the
    sandbox above, allowing you to run the chapter's examples by
    simply pasting them into the editor.
  </p>
</article>
<iframe src="./Eloquent JavaScript __ Code Sandbox_files/empty.html" style="display: none;"></iframe></body></html>